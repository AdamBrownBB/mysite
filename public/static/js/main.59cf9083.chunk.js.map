{"version":3,"sources":["containers/NavBar.js","components/FGCheeseCard.js","components/Mild.js","components/Medium.js","components/Bold.js","components/Bleu.js","containers/FlavorGrid.js","components/MiniDrinkCard.js","containers/PlateDrinkList.js","containers/PlateContainer.js","containers/PlateFlavorGrid.js","containers/PlateCard.js","containers/SavedPlates.js","components/CheeseDropDown.js","components/CheeseCard.js","containers/CheeseList.js","containers/CheeseContainer.js","containers/PlateSearch.js","components/DrinkCard.js","components/DrinkModal.js","containers/DrinkList.js","components/CheeseModal.js","containers/CheeseSearchList.js","containers/CheeseSearch.js","containers/DrinkSearch.js","App.js","index.js"],"names":["NavBar","state","handleItemClick","e","name","setState","activeItem","this","Sticky","Menu","pointing","size","color","Item","as","Link","to","active","content","onClick","Component","FGCheeseCard","props","Card","Image","src","cheese","image","centered","Content","Header","React","Mild","mildCheese","key","id","clickHandler","renderCheeseCard","Medium","mediumCheese","Bold","boldCheese","Bleu","bleuCheese","FlavorGrid","Grid","columns","relaxed","padded","Row","Column","flavorCardClick","MiniDrinkCard","drink","ui","floated","Description","PlateDrinkList","filterBeers","beers","drinks","forEach","variety","push","filterReds","reds","filterWhites","whites","toggleModal","console","log","map","Group","itemsPerRow","renderBeers","renderReds","renderWhites","PlateContainer","Divider","hidden","Button","suggestPlate","clearSelections","PlateFlavorGrid","PlateCard","plate","cheeses","cheeseFlavors","text","value","CheeseDropdown","changeHandler","changeFlavor","Dropdown","onChange","placeholder","button","selection","options","CheeseCard","wrapped","flavor","CheeseList","renderCheeseCards","CheeseContainer","renderCheeses","filteredByFlavor","filter","newFlavor","CheeseDropDown","PlateSearch","selectedDrinks","plates","fetchPlates","fetch","then","resp","json","data","addCheese","length","drinkState","handleDrinks","finalDrinks","find","cheesedrink","milds","mediums","bolds","bleus","shuffle","suggestions","choice","Math","floor","random","saveCheeses","addPlate","newPlate","savePlate","method","headers","body","JSON","stringify","res","cheeseFlavorsFetch","cheeseFlavor","cheese_id","plate_id","celled","width","className","saveButtonHandler","DrinkCard","textAlign","DrinkModal","Modal","open","drinkView","handleClose","noClick","DrinkList","activeDrink","CheeseModal","cheeseView","CheeseSearchList","activeCheese","CheeseSearch","DrinkSearch","App","fetchCheeses","fetchDrinks","renderPlateSearch","renderCheeseSearch","renderDrinkSearch","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.59cf9083.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Menu, Sticky } from 'semantic-ui-react'\n\n\nclass NavBar extends Component {\n\n    state = {}\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n     \n\n    render() { \n       const { activeItem } = this.state\n       \n       return (\n        <Sticky>\n            <Menu pointing size=\"large\" color='orange'>\n                <Menu.Item\n                    as={Link} to=\"/plates\"\n                    name='plates'\n                    active={activeItem === 'plates'}\n                    content='Create Cheese Plate'\n                    onClick={this.handleItemClick}\n                    color='orange'\n                />\n                <Menu.Item\n                    as={Link} to=\"/cheeses\"\n                    name='cheeses'\n                    active={activeItem === 'cheeses'}\n                    content='Search Cheeses'\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    as={Link} to=\"/drinks\"\n                    name='drinks'\n                    active={activeItem === 'drinks'}\n                    content='Search Drinks'\n                    onClick={this.handleItemClick}\n                />\n            </Menu>\n           </Sticky>\n            )\n    }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Card, Image, Header } from 'semantic-ui-react'\n\nclass FGCheeseCard extends React.Component {\n    render(props) {\n        return (\n           \n            <Card>\n                <Image src={this.props.cheese.image}  size='small' centered />\n                <Card.Content>\n                    <Header>{this.props.cheese.name}</Header>\n                </Card.Content>\n             </Card>\n          \n\n        )\n    };\n}\n\nexport default FGCheeseCard;","import React, { Component } from 'react';\nimport FGCheeseCard from './FGCheeseCard';\nimport { Card, Image } from 'semantic-ui-react'\n\n\nclass Mild extends Component {\n\n\n\n    renderCheeseCard() {\n        if (this.props.mildCheese) {\n            return <FGCheeseCard \n            key={this.props.mildCheese.id}\n                cheese={this.props.mildCheese}\n                clickHandler={this.props.clickHandler} />\n        } else {\n            return <Card >\n                <Image src=\"https://www.civhc.org/wp-content/uploads/2018/10/question-mark.png\" centered size='small' />\n                \n            </Card>    \n        }\n    }\n\n    render() {\n        return (\n            <div>\n              {this.renderCheeseCard()}\n            </div>\n        );\n    }\n}\n\nexport default Mild;","import React, { Component } from 'react';\nimport FGCheeseCard from './FGCheeseCard';\nimport { Card, Image } from 'semantic-ui-react'\n\nclass Medium extends Component {\n\n    renderCheeseCard() {\n        if (this.props.mediumCheese) {\n            return <FGCheeseCard key={this.props.mediumCheese.id}\n                clickHandler={this.props.clickHandler}\n                cheese={this.props.mediumCheese} />\n        } else {\n            return <Card >\n                <Image src=\"https://www.civhc.org/wp-content/uploads/2018/10/question-mark.png\" centered size='small'  />\n                 \n                    </Card>    \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderCheeseCard()}\n            </div>\n        );\n    }\n}\n\nexport default Medium;","import React, { Component } from 'react';\nimport FGCheeseCard from './FGCheeseCard';\nimport { Card, Image } from 'semantic-ui-react'\n\n\nclass Bold extends Component {\n\n    renderCheeseCard() {\n        if (this.props.boldCheese) {\n            return <FGCheeseCard key={this.props.boldCheese.id}\n                clickHandler={this.props.clickHandler}\n                cheese={this.props.boldCheese} />\n        } else {\n            return  <Card >\n                <Image src=\"https://www.civhc.org/wp-content/uploads/2018/10/question-mark.png\" centered size='small'  />\n                     \n                    </Card> \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderCheeseCard()}\n            </div>\n        );\n    }\n}\n\nexport default Bold;","import React, { Component } from 'react';\nimport FGCheeseCard from './FGCheeseCard';\nimport { Card, Image } from 'semantic-ui-react'\n\n\nclass Bleu extends Component {\n\n    renderCheeseCard() {\n        if (this.props.bleuCheese) {\n            return <FGCheeseCard key={this.props.bleuCheese.id}\n                clickHandler={this.props.clickHandler}\n                cheese={this.props.bleuCheese} />\n        } else {\n            return  <Card >\n                <Image src=\"https://www.civhc.org/wp-content/uploads/2018/10/question-mark.png\" centered size='small' />\n                 \n                    </Card> \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderCheeseCard()}\n            </div>\n        );\n    }\n}\n\nexport default Bleu;","import React, { Component } from 'react';import { Grid } from 'semantic-ui-react'\n\nimport Mild from '../components/Mild';\nimport Medium from '../components/Medium';\nimport Bold from '../components/Bold';\nimport Bleu from '../components/Bleu';\n\nclass FlavorGrid extends Component {\n \n    render() {\n    return (\n        <div>\n            <Grid columns={2} relaxed padded >\n                <Grid.Row>\n                    <Grid.Column>\n                        <h3>Mild</h3>\n                        <Mild \n                            mildCheese={this.props.mildCheese}\n                            clickHandler={this.props.flavorCardClick}/>\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <h3>Medium</h3>\n                        <Medium mediumCheese={this.props.mediumCheese}\n                                clickHandler={this.props.flavorCardClick} />\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row>\n                    <Grid.Column>\n                        <h3>Bold</h3>\n                        <Bold boldCheese={this.props.boldCheese}\n                              clickHandler={this.props.flavorCardClick} />\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <h3>Bleu</h3>\n                        <Bleu bleuCheese={this.props.bleuCheese}\n                            clickHandler={this.props.flavorCardClick}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n           \n        </div>\n    )};\n}\n\n\nexport default FlavorGrid;","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react'\n\nclass MiniDrinkCard extends React.Component {\n    render() {\n        return (\n        \n\n\n                <Card\n                    onClick={() => {\n                        this.props.clickHandler(this.props.drink)\n                    }}>\n\n                        <Image src={this.props.drink.image}  ui={true} size='mini' floated='left'/>\n                    <Card.Content>\n                        {/* <Card.Header ></Card.Header> */}\n\n                        <Card.Description>\n                        <h4>{this.props.drink.name}</h4>\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n           \n\n        )\n    };\n}\n\nexport default MiniDrinkCard;","import React from 'react';\nimport MiniDrinkCard from '../components/MiniDrinkCard';\nimport { Card, Image } from 'semantic-ui-react'\n\n\nclass PlateDrinkList extends React.Component {\n\n    filterBeers = () => {\n        let beers = [];\n        this.props.drinks.forEach(drink => {\n            if (drink.variety === 'beer') {\n                beers.push(drink);\n            }\n        })\n        return beers\n    }\n\n    renderBeers(beers) {\n        return beers.map(drink => {\n            return <MiniDrinkCard\n                key={drink.id}\n                clickHandler={this.toggleModal}\n                drink={drink}\n            />\n        })\n    }\n\n    filterReds = () => {\n        let reds = [];\n        this.props.drinks.forEach(drink => {\n            if (drink.variety === 'red') {\n                reds.push(drink);\n            }\n        })\n        return reds\n    }\n\n    renderReds(reds) {\n        return reds.map(drink => {\n            return <MiniDrinkCard\n                key={drink.id}\n                drink={drink}\n                clickHandler={this.toggleModal}\n            />\n        })\n    }\n\n    filterWhites = () => {\n        let whites = [];\n        this.props.drinks.forEach(drink => {\n            if (drink.variety === 'white') {\n                whites.push(drink);\n            }\n        })\n        return whites\n    }\n\n    renderWhites(whites) {\n        return whites.map(drink => {\n            return <MiniDrinkCard\n                key={drink.id}\n                drink={drink}\n                clickHandler={this.toggleModal}\n            />\n        })\n    }\n\n    toggleModal = (drink) => {\n        console.log(\"click\")\n    }\n\n    render() {\n        return (\n            <div>\n\n                <h4>Beers</h4>\n                    <Card.Group itemsPerRow={3}>\n                     {this.renderBeers(this.filterBeers())}\n                    </Card.Group>\n                <h4>Reds</h4>\n                    <Card.Group itemsPerRow={3}>\n                      {this.renderReds(this.filterReds())}\n                    </Card.Group>\n                <h4>Whites</h4>\n                    <Card.Group itemsPerRow={3}>\n                       {this.renderWhites(this.filterWhites())}\n                    </Card.Group>\n            </div>\n        )\n    };\n} //end of class\n\nexport default PlateDrinkList;\n\n\n// Not in use, but will render ALL drinks\n// renderDrinkCards() {\n//     return this.props.drinks.map(drink => {\n//         return <DrinkCard\n//             key={drink.id}\n//             drink={drink}\n//         />\n//     })\n// }  ","import React, { Component } from 'react';\nimport { Button, Grid, Divider } from 'semantic-ui-react'\nimport FlavorGrid from './FlavorGrid';\nimport PlateDrinkList from './PlateDrinkList';\n\nclass PlateContainer extends Component {\n\n    render() {\n     return (   \n        <div >\n            <h1>My Cheese Plate</h1>\n           \n             <FlavorGrid \n                \n                mildCheese={this.props.mildCheese}\n                mediumCheese={this.props.mediumCheese}\n                boldCheese={this.props.boldCheese}\n                bleuCheese={this.props.bleuCheese}\n                flavorCardClick={this.props.flavorCardClick}\n                />\n             <Divider hidden></Divider>\n             <Grid relaxed padded >\n             <Button onClick={() => { this.props.suggestPlate() }}>Suggest Plate</Button>\n                   \n\n             <Button onClick={() => {this.props.clearSelections()}} >Clear Selections</Button>\n                  \n             {/* <Button onClick={() => {this.props.saveButtonHandler()}}>Save</Button> */}\n                 \n            {/* <Button>Share</Button>                     */}\n             </Grid>\n            <h3> These Drinks Pair with Your Plate</h3>\n            <PlateDrinkList\n                 drinks={this.props.drinks}\n              />\n        </div>)\n    }\n} //end PlateContainer\n\nexport default PlateContainer;","import React, { Component } from 'react'; \nimport { Grid } from 'semantic-ui-react'\n\nimport Mild from '../components/Mild';\nimport Medium from '../components/Medium';\nimport Bold from '../components/Bold';\nimport Bleu from '../components/Bleu';\n\nclass PlateFlavorGrid extends Component {\n\n    render() {\n        return (\n            <div>\n                <Grid columns={2} >\n                    <Grid.Row>\n                        <Grid.Column>\n                            <p>Mild</p>\n                            <Mild\n                                mildCheese={this.props.mildCheese}\n                                flavorCardClick={this.props.flavorCardClick} />\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <p>Medium</p>\n                            <Medium mediumCheese={this.props.mediumCheese} />\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                        <Grid.Column>\n                            <p>Bold</p>\n                            <Bold boldCheese={this.props.boldCheese} />\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <p>Bleu</p>\n                            <Bleu bleuCheese={this.props.bleuCheese} />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n            </div>\n        )\n    };\n}\n\n\nexport default PlateFlavorGrid;","import React, { Component } from 'react';\nimport PlateFlavorGrid from './PlateFlavorGrid';\nimport { Grid } from 'semantic-ui-react'\n\nclass PlateCard extends Component {\n\n    render() {\n        return (\n            <div>\n                <Grid  >\n                   \n                <PlateFlavorGrid\n                \n                    mildCheese={this.props.plate.cheeses[0]}\n                    mediumCheese={this.props.plate.cheeses[1]}\n                    boldCheese={this.props.plate.cheeses[2]}\n                    bleuCheese={this.props.plate.cheeses[3]}\n\n                    flavorCardClick={this.props.flavorCardClick}\n                />\n              \n                </Grid>\n            </div>\n        )\n    }\n} //end PlateCard\n\nexport default PlateCard;","import React from 'react';\nimport PlateCard from './PlateCard';\nimport { Card } from 'semantic-ui-react';\n\n\nclass SavedPlates extends React.Component {\n\n\n\n    renderPlateCards() {\n        return this.props.plates.map(plate => {\n            return <PlateCard\n                key={plate.id}\n                plate={plate}\n                flavorCardClick={this.props.flavorCardClick}\n            />\n        })\n    }    \n\n    render() {\n        return (\n            <div>\n                <h1>My Saved Plates</h1>\n                <Card.Group itemsPerRow={3}>\n                {this.renderPlateCards()}\n                </Card.Group>\n            </div>\n        )\n    };\n\n}\n\n\nexport default SavedPlates;","import React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nconst cheeseFlavors = [\n    {\n        key: 'all',\n        text: 'All',\n        value: 'all'\n    },\n    {\n        key: 'mild',\n        text: 'Mild',\n        value: 'mild'\n    },\n    {\n        key: 'medium',\n        text: 'Medium',\n        value: 'medium'\n    },\n    {\n        key: 'bold',\n        text: 'Bold',\n        value: 'bold'\n    },\n    {\n        key: 'bleu',\n        text: 'Bleu',\n        value: 'bleu'\n    }\n]\nclass CheeseDropdown extends React.Component {\n\nchangeHandler = (e, name) => {\n    this.props.changeFlavor(name.value)\n}\n\n    render() {\n        return (\n            <div>\n        <Dropdown \n            onChange={this.changeHandler}\n            placeholder='Select Flavor'\n            button\n            selection\n            options={cheeseFlavors}\n        />\n        </div >\n\n\n)}\n}\nexport default CheeseDropdown;","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react'\n\nclass CheeseCard extends React.Component {\n    render(props) {\n    return (\n       \n        <Card onClick={() => {\n            this.props.clickHandler(this.props.cheese)\n        }} >\n                <Image src={this.props.cheese.image} wrapped ui={false} size='small' />\n                <Card.Content>\n                    <Card.Header>{this.props.cheese.name}</Card.Header>\n                    \n                    <Card.Description>\n                    <b>Flavor: </b> {this.props.cheese.flavor} \n                    </Card.Description>\n                {/* <Card.Description>\n                    <b>Milk: </b> {this.props.cheese.milk} \n                </Card.Description> */}\n                </Card.Content>\n            </Card>    \n    \n      \n    )};\n}\n\nexport default CheeseCard;","import React from 'react';\nimport CheeseCard from '../components/CheeseCard';\nimport { Card } from 'semantic-ui-react'\n\nclass CheeseList extends React.Component {\n    \n    // state = {\n    //     cheeseView: true\n    // }\n\n    renderCheeseCards() {\n        return this.props.cheeses.map(cheese => {\n            return <CheeseCard \n                key={cheese.id}\n                clickHandler={this.props.clickHandler}\n                cheese={cheese}\n            />\n        })\n    }\n\n    render() {\n        return (\n            <div >\n                <Card.Group itemsPerRow={4}>\n                {this.renderCheeseCards()}\n                </Card.Group>\n            </div>\n        )\n    }\n    \n} //end CheeseList\n\nexport default CheeseList;","import React from 'react';\nimport CheeseDropDown from '../components/CheeseDropDown'\nimport CheeseList from './CheeseList';\nimport { Divider } from 'semantic-ui-react'\n\n\nclass CheeseContainer extends React.Component {\n\n    state = {\n        flavor: \"all\",\n    }    \n\n    renderCheeses = () => {\n        let filteredByFlavor;\n\n        switch (this.state.flavor) {\n            case \"all\":\n                filteredByFlavor = this.props.cheeses\n                break;\n\n            case \"mild\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"mild\"\n                })\n                break;\n            case \"medium\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"medium\"\n                })\n                break;\n            case \"bold\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"bold\"\n                })\n                break;\n            case \"bleu\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"bleu\"\n                })\n                break;\n            default: filteredByFlavor = this.props.cheeses\n                break;\n\n        }\n        return filteredByFlavor\n    }  \n    \n    changeFlavor = (newFlavor) => {\n        this.setState({\n            flavor: newFlavor\n        })\n    }\n\n    render() {\n        return (\n        <div>\n            <h1>Choose your cheeses</h1>\n            <p>You'll need one of each flavor of cheese to make a plate.</p>\n     \n            <CheeseDropDown changeFlavor={this.changeFlavor}/>\n                <Divider hidden></Divider>\n            <CheeseList cheeses={this.renderCheeses()}\n                    clickHandler={this.props.clickHandler}\n                />\n        </div>\n    )};\n}\n\nexport default CheeseContainer;\n\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react'\n\nimport PlateContainer from './PlateContainer';\nimport SavedPlates from './SavedPlates';\nimport CheeseContainer from './CheeseContainer';\n\nclass PlateSearch extends React.Component {\n\n    state = {\n        flavor: \"all\",\n        mildCheese: null,\n        mediumCheese: null,\n        boldCheese: null,\n        bleuCheese: null,\n        selectedDrinks: [],\n        plates: []\n    }\n\n    componentDidMount() {\n        this.fetchPlates()\n    }\n\n    fetchPlates = () => {\n        fetch(\"http://localhost:3000/plates\")\n            .then(resp => resp.json())\n            .then(data =>\n                this.setState({\n                    plates: data\n                }))\n    }\n\n    // adds a cheese into each flavor in grid, also shows paired drinks by filtering down\n    // filter only looks at last two associations, need to account for all\n    // probably a good candidate for refactoring , 2x    \n\n    addCheese = (cheese) => {\n        if (cheese.flavor === 'mild') {\n            this.setState({ mildCheese: cheese }, () => {\n            if (this.state.selectedDrinks.length < 1) {\n                    this.setState({ selectedDrinks: this.state.mildCheese.drinks })\n                } else {\n                    let drinkState = this.handleDrinks(this.state.mildCheese)\n                    this.setState({selectedDrinks: drinkState})\n                }\n            })\n        } else if \n            (cheese.flavor === 'medium') {\n            this.setState({ mediumCheese: cheese }, () => {\n                if (this.state.selectedDrinks.length < 1) {\n                    this.setState({ selectedDrinks: this.state.mediumCheese.drinks })\n                } else {\n                    let drinkState = this.handleDrinks(this.state.mediumCheese)\n                    this.setState({ selectedDrinks: drinkState })\n                }\n            }\n            )\n        } else if\n            (cheese.flavor === 'bold') {\n            this.setState({ boldCheese: cheese }, () => {\n                if (this.state.selectedDrinks.length < 1) {\n                    this.setState({ selectedDrinks: this.state.boldCheese.drinks })\n                } else {\n                    let drinkState = this.handleDrinks(this.state.boldCheese)\n                    this.setState({ selectedDrinks: drinkState })\n                }\n            })\n        } else if\n            (cheese.flavor === 'bleu') {\n            this.setState({ bleuCheese: cheese }, () => {\n                if (this.state.selectedDrinks.length < 1) {\n                    this.setState({ selectedDrinks: this.state.bleuCheese.drinks })\n                } else {\n                    let drinkState = this.handleDrinks(this.state.bleuCheese)\n                    this.setState({ selectedDrinks: drinkState })\n                }\n            })\n        }\n    }    \n\n    handleDrinks = (cheese) => {\n        console.log(\"next cheese selected drinks\", cheese.drinks)\n        console.log(\"prior selected\", this.state.selectedDrinks)\n        let finalDrinks = [];\n      \n        this.state.selectedDrinks.forEach(drink => {\n            if (cheese.drinks.find(cheesedrink => cheesedrink.id === drink.id)) {\n                finalDrinks.push(drink);\n            }                    \n        })\n            console.log(\"final\",finalDrinks)\n            return finalDrinks\n        \n    }\n\n    \n    suggestPlate = () => {\n        let milds = [];\n        let mediums = [];\n        let bolds = [];\n        let bleus = [];\n        this.clearSelections()\n        this.props.cheeses.forEach(cheese => {\n            if (cheese.flavor === 'mild') {\n                milds.push(cheese);\n                this.shuffle(milds, \"mildCheese\")    \n            } if (cheese.flavor === 'medium') {\n                mediums.push(cheese);\n                this.shuffle(mediums, \"mediumCheese\")\n            } if (cheese.flavor === 'bold') {\n                bolds.push(cheese);\n                this.shuffle(bolds, \"boldCheese\")\n            } if (cheese.flavor === 'bleu') {\n                bleus.push(cheese);\n                this.shuffle(bleus, \"bleuCheese\")    \n            }\n        })  \n    }\n    \n    shuffle = (suggestions, flavor) => {\n        let choice = suggestions[Math.floor(Math.random() * suggestions.length)];\n        this.addCheese(choice)\n    }\n    \n    clearSelections = () => {\n        this.setState({ mildCheese: null, mediumCheese: null, boldCheese: null, bleuCheese: null, saveCheeses: null, selectedDrinks: []})\n    }\n    \n    addPlate = (newPlate) => {\n        this.setState({\n            plates: [...this.state.plates, newPlate]\n        })\n    }\n    \n    flavorCardClick = () => { \n      // fixes breaking in FlavorGrid\n    }\n\n    savePlate = (e) => {\n        // e.preventDefault()\n        fetch(\"https://more-cheese-please.herokuapp.com/plates\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: \"test\"\n            })\n    })\n            .then(res => res.json())\n            .then(plate => {\n                this.cheeseFlavorsFetch(plate, this.state.mildCheese)\n                this.cheeseFlavorsFetch(plate, this.state.mediumCheese)\n                this.cheeseFlavorsFetch(plate, this.state.boldCheese)\n                this.cheeseFlavorsFetch(plate, this.state.bleuCheese)\n                this.addPlate(plate)\n                this.clearSelections()\n            })\n    }\n\n    cheeseFlavorsFetch(plate, cheeseFlavor) {\n        \n        fetch(\"https://more-cheese-please.herokuapp.com/cheese_plates\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify({\n                cheese_id: cheeseFlavor.id,\n                plate_id: plate.id\n            })\n        })\n        .then(res => res.json())\n    }\n\n\n    render() {\n        return ( \n        <div>\n            <Grid celled>\n                <Grid.Row>\n                    <Grid.Column width={10}>\n                        <CheeseContainer\n                            cheeses={this.props.cheeses}\n                            clickHandler={(cheese) => this.addCheese(cheese)} />\n                    </Grid.Column>\n                        <Grid.Column className='plates' width={6}>\n                        <PlateContainer \n                            plates={this.state.plates}\n                            cheeses={this.props.cheeses}\n                            drinks={this.state.selectedDrinks}\n\n                            mildCheese={this.state.mildCheese}\n                            mediumCheese={this.state.mediumCheese}\n                            boldCheese={this.state.boldCheese}\n                            bleuCheese={this.state.bleuCheese}\n\n                            clearSelections={this.clearSelections}\n                            saveButtonHandler={this.savePlate}\n                            suggestPlate={this.suggestPlate}\n                            flavorCardClick={this.flavorCardClick}/>\n                    </Grid.Column>\n                </Grid.Row>    \n                {/* <Grid.Row>\n\n\n                    <Grid.Column>\n                        <SavedPlates \n                            plates={this.state.plates}\n                                flavorCardClick={this.flavorCardClick}/>\n                    </Grid.Column>\n                </Grid.Row> */}\n            </Grid>\n        </div>\n    )};\n}\n\nexport default PlateSearch;\n\n\n\n    // ALTERNATE LOGIC maybe try this later    \n    // findDrinkPairs = () => {\n    //     let mildDrinks = [];\n    //     let mediumDrinks = [];\n    //     if (this.state.mildCheese) {\n    //         mildDrinks.push(this.state.mildCheese.drinks)\n    //         console.log(\"mild\", mildDrinks)\n    //     } if (this.state.mediumCheese) {\n    //         mediumDrinks.push(this.state.mediumCheese.drinks)\n    //         console.log(\"meds\", mediumDrinks)\n    //     }\n\n    //     let allTheDrinks = mildDrinks.concat(mediumDrinks)\n    //     console.log(\"all now\", allTheDrinks)\n    // }\n\n    //// ***********************************************\n\n    // find_duplicate_in_array = (allDrinks) => {\n    //     var object = {};\n    //     var result = [];\n\n    //     allDrinks.forEach(function (item) {\n    //         if (!object[item])\n    //             object[item] = 0;\n    //         object[item] += 1;\n    //     })\n\n    //     for (var prop in object) {\n    //         if (object[prop] >= 2) {\n    //             result.push(prop);\n    //         }\n    //     }\n    //     console.log(\"result\", result)\n    //     return result;\n\n    // }","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react'\n\nclass DrinkCard extends React.Component {\n    render() {\n        return (\n            <Card.Group itemsPerRow={1}>\n               \n          \n            <Card \n                onClick={() => {\n                 this.props.clickHandler(this.props.drink)\n                }}>\n                    \n                <Image src={this.props.drink.image} \n                 \n                size='medium' />\n                <Card.Content>\n                    <Card.Header textAlign='center' >{this.props.drink.name}</Card.Header>\n    \n                    <Card.Description>\n                    \n                    </Card.Description>\n                </Card.Content>\n            </Card>\n            </Card.Group>\n\n        )\n    };\n}\n\nexport default DrinkCard;","import React from 'react';\nimport { Header, Image, Modal } from 'semantic-ui-react'\nimport CheeseList from '../containers/CheeseList';\n\n\nclass DrinkModal extends React.Component {\n\n    noClick(){\n        //I'm just killing the click so this doesn't break\n    }\n\n    render() {\n        return (\n\n            <Modal open={this.props.drinkView}\n                onClick={this.props.handleClose}\n                >\n               \n               \n                <Modal.Header>\n                    {this.props.drink.name}\n                </Modal.Header>\n                <Modal.Content image>\n                    <Image src={this.props.drink.image} wrapped size='medium' />\n                    <Modal.Description>\n                        <Header>Pair with:</Header>\n                        <CheeseList cheeses={this.props.cheeses} \n                            clickHandler={this.noClick}\n                        />\n\n                    </Modal.Description>\n                </Modal.Content>\n\n            </Modal>\n\n        )\n    };\n}\n\nexport default DrinkModal;","import React from 'react';\nimport DrinkCard from '../components/DrinkCard';\nimport DrinkModal from '../components/DrinkModal';\nimport { Grid, Header } from 'semantic-ui-react'\n\n\n\nclass DrinkList extends React.Component  {\n\n    state = {\n        drinkView: false,\n        activeDrink: null\n    }\n  \n    filterBeers = () => {\n        let beers = [];\n        this.props.drinks.forEach(drink => {\n            if (drink.variety === 'beer') {\n                beers.push(drink);\n            }\n        })\n        return beers\n    }\n    \n    renderBeers(beers) {\n        return beers.map(drink => {\n            return <DrinkCard\n                key={drink.id}\n                clickHandler={this.toggleModal}\n                drink={drink}\n            />\n        })\n    }   \n\n    filterReds = () => {\n        let reds = [];\n        this.props.drinks.forEach(drink => {\n            if (drink.variety === 'red') {\n                reds.push(drink);\n            }\n        })\n        return reds\n    }\n\n    renderReds(reds) {\n        return reds.map(drink => {\n            return <DrinkCard\n                key={drink.id}\n                drink={drink}\n                clickHandler={this.toggleModal}\n            />\n        })\n    }   \n\n    filterWhites = () => {\n        let whites = [];\n        this.props.drinks.forEach(drink => {\n            if (drink.variety === 'white') {\n                whites.push(drink);\n            }\n        })\n        return whites\n    }\n\n    renderWhites(whites) {\n        return whites.map(drink => {\n            return <DrinkCard\n                key={drink.id}\n                drink={drink}\n                clickHandler={this.toggleModal}\n            />\n        })\n    }   \n  \n    toggleModal = (drink) => {\n        this.setState({\n            drinkView: !this.state.drinkView,\n            activeDrink: drink\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"card-container\">\n            \n                {this.state.drinkView &&\n                    <DrinkModal\n                        drink={this.state.activeDrink}\n                        drinkView={this.state.drinkView}\n                        handleClose={() => {\n                            this.setState({ drinkView: false })\n                        }}\n                        cheeses={this.state.activeDrink.cheeses}\n                    />\n                }\n               \n                <Grid celled>\n                        <Grid.Column width={5}>\n                            <h3>Beers</h3>\n                            {this.renderBeers(this.filterBeers())}\n                        </Grid.Column>\n                   \n                 \n                        <Grid.Column width={5}>\n                            <h3>Reds</h3>\n                            {this.renderReds(this.filterReds())}\n                        </Grid.Column>\n                   \n                 \n                        <Grid.Column width={5}>\n                            <h3>Whites</h3>\n                            {this.renderWhites(this.filterWhites())}\n                        </Grid.Column>\n                   \n                </Grid>    \n        </div>\n                \n                \n  \n        )\n    };\n} //end of class\n\nexport default DrinkList;\n","import React from 'react';\nimport { Header, Image, Modal } from 'semantic-ui-react'\nimport DrinkList from '../containers/DrinkList';\n\n\nclass CheeseModal extends React.Component {\n    render() {\n        return (\n            <Modal open={this.props.cheeseView}\n                onClick={this.props.handleClose}>\n                <Modal.Header>\n                    {this.props.cheese.name}\n                </Modal.Header>\n                <Modal.Content image>\n                    <Image src={this.props.cheese.image} wrapped  size='medium' />\n                    <Modal.Description>\n                        <Header>Pair with:</Header>\n                        <DrinkList drinks={this.props.drinks} />\n                                \n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n\n        )\n    };\n}\n\nexport default CheeseModal;","import React from 'react';\nimport CheeseCard from '../components/CheeseCard';\nimport CheeseModal from '../components/CheeseModal';\nimport CheeseDropDown from '../components/CheeseDropDown';\nimport { Card, Grid, Divider } from 'semantic-ui-react'\n\n\nclass CheeseSearchList extends React.Component {\n\n    state = {\n        cheeseView: false,\n        activeCheese: null\n    }\n\n    renderCheeseCards() {\n        return this.props.cheeses.map(cheese => {\n            return <CheeseCard\n                key={cheese.id}\n                clickHandler={this.toggleModal}\n                cheese={cheese}\n            />\n        })\n    }\n\n    toggleModal = (cheese) => {\n        this.setState({\n            cheeseView: !this.state.cheeseView, \n            activeCheese: cheese\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid >\n                {this.state.cheeseView &&\n                   <CheeseModal\n                    cheese={this.state.activeCheese}\n                    cheeseView={this.state.cheeseView}\n                    handleClose={ () => {\n                            this.setState({ cheeseView: false })\n                        }}\n                    drinks={this.state.activeCheese.drinks}    \n                   />  \n                }\n                <Grid.Row>\n                    <Grid.Column>\n                        <h1>Pick a Cheese</h1>\n                        <p>Choose any cheese to see what drinks pair well with it</p>\n                        <CheeseDropDown changeFlavor={this.props.changeFlavor} />\n                        <Divider hidden></Divider>\n\n                        <Card.Group itemsPerRow={6}>\n                            {this.renderCheeseCards()}\n                        </Card.Group>\n                    </Grid.Column>\n                </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n\n} //end CheeseSearchList\n\nexport default CheeseSearchList;","import React from 'react';\nimport CheeseDropDown from '../components/CheeseDropDown';\nimport CheeseSearchList from './CheeseSearchList';\nimport { Grid } from 'semantic-ui-react'\n\n\nclass CheeseSearch extends React.Component {\n\n    state = {\n        flavor: \"all\",\n    }\n\n    renderCheeses = () => {\n        let filteredByFlavor;\n\n        switch (this.state.flavor) {\n            case \"all\":\n                filteredByFlavor = this.props.cheeses\n                break;\n\n            case \"mild\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"mild\"\n                })\n                break;\n            case \"medium\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"medium\"\n                })\n                break;\n            case \"bold\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"bold\"\n                })\n                break;\n            case \"bleu\":\n                filteredByFlavor = this.props.cheeses.filter((cheese) => {\n                    return cheese.flavor === \"bleu\"\n                })\n                break;\n            default: filteredByFlavor = this.props.cheeses\n                break;\n\n        }\n        return filteredByFlavor\n    }\n\n    changeFlavor = (newFlavor) => {\n        this.setState({\n            flavor: newFlavor\n        })\n    }\n\n\n    render() {  \n        return (\n            <div>\n                <Grid celled>\n                    <Grid.Row>\n                        <Grid.Column width={10}>\n                            <CheeseSearchList \n                                cheeses={this.renderCheeses()} \n                                changeFlavor={this.changeFlavor}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )}\n}\n\nexport default CheeseSearch;","import React from 'react';\nimport DrinkList from './DrinkList';\nimport { Grid } from 'semantic-ui-react'\n\n\nclass DrinkSearch extends React.Component {\n    \n    render() {\n    return (\n        <div>\n            <Grid celled>\n                <Grid.Row>\n                    <Grid.Column width={10}>\n                     <h1>Pick a Drink</h1>\n                      <p>Choose a drink to see what cheeses pair well with it</p>\n                    <DrinkList drinks={this.props.drinks}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>    \n        </div>\n    )};\n}\n\nexport default DrinkSearch;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport NavBar from './containers/NavBar';\nimport PlateSearch from './containers/PlateSearch';\nimport CheeseSearch from './containers/CheeseSearch';\nimport DrinkSearch from './containers/DrinkSearch';\n\nclass App extends Component {\n\n  state = {\n    cheeses: [],\n    drinks: []\n  }\n\n  componentDidMount() {\n    this.fetchCheeses()\n    this.fetchDrinks()\n  }\n\n\n\n  fetchCheeses = () => {\n    fetch(\"https://more-cheese.onrender.com/cheeses\")\n      .then((resp) => resp.json())\n      .then((data) =>\n        this.setState({\n          cheeses: data,\n        })\n      );\n  }\n\n  fetchDrinks = () => {\n    fetch(\"https://more-cheese.onrender.com/drinks\")\n      .then((resp) => resp.json())\n      .then((data) =>\n        this.setState({\n          drinks: data,\n        })\n      );\n  }\n\n\n\n  renderPlateSearch = () => {\n    return < PlateSearch \n                        cheeses={this.state.cheeses}\n                        drinks={this.state.drinks} \n                        // plates={this.state.plates}\n                        // addPlate={this.addPlate} \n                        />\n  }  \n\n  renderCheeseSearch = () => {\n    return < CheeseSearch\n      cheeses={this.state.cheeses}\n      drinks={this.state.drinks}\n    />\n  }  \n\n  renderDrinkSearch = () => {\n    return < DrinkSearch\n      cheeses={this.state.cheeses}\n      drinks={this.state.drinks}\n    />\n  }  \n\n\n  render() { \n    \n    return (\n      <Router>\n        <NavBar />\n        <Route path=\"/plates\" render={this.renderPlateSearch}/>\n        <Route path=\"/cheeses\" render={this.renderCheeseSearch}/>\n        <Route path=\"/drinks\" render={this.renderDrinkSearch}/>\n      </Router>\n       \n  )}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n      \n    , document.getElementById('root'));\n\n"],"sourceRoot":""}